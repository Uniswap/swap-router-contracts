/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MixedRouteQuoterV1,
  MixedRouteQuoterV1Interface,
} from "../../../contracts/lens/MixedRouteQuoterV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factoryV2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH9",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryV2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "quoteExactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint160[]",
        name: "v3SqrtPriceX96AfterList",
        type: "uint160[]",
      },
      {
        internalType: "uint32[]",
        name: "v3InitializedTicksCrossedList",
        type: "uint32[]",
      },
      {
        internalType: "uint256",
        name: "v3SwapGasEstimate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
        ],
        internalType:
          "struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params",
        name: "params",
        type: "tuple",
      },
    ],
    name: "quoteExactInputSingleV2",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType:
          "struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params",
        name: "params",
        type: "tuple",
      },
    ],
    name: "quoteExactInputSingleV3",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96After",
        type: "uint160",
      },
      {
        internalType: "uint32",
        name: "initializedTicksCrossed",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasEstimate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001db138038062001db1833981016040819052620000349162000078565b6001600160601b0319606093841b811660805290831b811660a052911b1660c052620000c1565b80516001600160a01b03811681146200007357600080fd5b919050565b6000806000606084860312156200008d578283fd5b62000098846200005b565b9250620000a8602085016200005b565b9150620000b8604085016200005b565b90509250925092565b60805160601c60a05160601c60c05160601c611cab620001066000398061015152806106b552508061012d525080610328528061057252806106fb5250611cab6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b174a0a71161005b578063b174a0a7146100c8578063c45a0155146100eb578063cdca1753146100f3578063fa461e33146101165761007d565b80634aa4a4fc1461008257806368e0d4e1146100a05780638a499286146100a8575b600080fd5b61008a61012b565b6040516100979190611a3a565b60405180910390f35b61008a61014f565b6100bb6100b63660046117f6565b610173565b6040516100979190611b19565b6100db6100d636600461185a565b610192565b6040516100979493929190611bbd565b61008a610326565b6101066101013660046116d8565b61034a565b6040516100979493929190611b22565b61012961012436600461173e565b610541565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061018c8260400151836000015184602001516106ab565b92915050565b6020810151815160608301516000928392839283926001600160a01b03808216908416109284926101c392906106f4565b905060005a9050816001600160a01b031663128acb0830856101e88c60400151610732565b60808d01516001600160a01b031615610205578c6080015161022b565b876102245773fffd8963efd1fc6a506488495d951d5263988d2561022b565b6401000276a45b8d600001518e606001518f6020015160405160200161024c939291906119e7565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161027b959493929190611a4e565b6040805180830381600087803b15801561029457600080fd5b505af19250505080156102c4575060408051601f3d908101601f191682019092526102c19181019061171b565b60015b610319573d8080156102f2576040519150601f19603f3d011682016040523d82523d6000602084013e6102f7565b606091505b505a82039450610308818487610764565b97509750975097505050505061031f565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000606080600061035a8661081e565b67ffffffffffffffff8111801561037057600080fd5b5060405190808252806020026020018201604052801561039a578160200160208202803683370190505b5092506103a68661081e565b67ffffffffffffffff811180156103bc57600080fd5b506040519080825280602002602001820160405280156103e6578160200160208202803683370190505b50915060005b60008060006103fa8a61082f565b9194509250905062800000811615610448576104416040518060600160405280856001600160a01b03168152602001846001600160a01b031681526020018b815250610173565b9850610500565b60008060008061049e6040518060a00160405280896001600160a01b03168152602001886001600160a01b031681526020018f81526020018762ffffff16815260200160006001600160a01b0316815250610192565b9350935093509350828b89815181106104b357fe5b60200260200101906001600160a01b031690816001600160a01b031681525050818a89815181106104e057fe5b63ffffffff90921660209283029190910190910152929b50505094909401935b60019093019261050f8a610860565b156105245761051d8a610868565b9950610530565b88975050505050610538565b5050506103ec565b92959194509250565b60008313806105505750600082135b61055957600080fd5b60008060006105678461082f565b9250925092506105997f000000000000000000000000000000000000000000000000000000000000000084848461087f565b50600080600088136105c357846001600160a01b0316846001600160a01b031610886000036105dd565b836001600160a01b0316856001600160a01b031610876000035b9150915060006105ee8686866106f4565b9050600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561062c57600080fd5b505afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066491906118e7565b505050505091509150841561068a57604051848152826020820152816040820152606081fd5b60405162461bcd60e51b81526004016106a290611ae4565b60405180910390fd5b60008060006106db7f0000000000000000000000000000000000000000000000000000000000000000868661089e565b915091506106ea86838361096c565b9695505050505050565b600061072a7f0000000000000000000000000000000000000000000000000000000000000000610725868686610a28565b610a7e565b949350505050565b60007f8000000000000000000000000000000000000000000000000000000000000000821061076057600080fd5b5090565b600080600080600080876001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156107a657600080fd5b505afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de91906118e7565b509396506107f394508d9350610b7a92505050565b9197509550905061080e6001600160a01b0389168383610bfe565b9350869250505093509350935093565b80516017601319909101045b919050565b6000808061083d8482611187565b925061084a846014611253565b9050610857846017611187565b91509193909250565b516042111590565b805160609061018c9083906017906016190161130f565b600061089585610890868686610a28565b61148a565b95945050505050565b60008060006108ad85856114ad565b5090506000806108be888888611511565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156108f657600080fd5b505afa15801561090a573d6000803e3d6000fd5b505050506040513d606081101561092057600080fd5b5080516020909101516dffffffffffffffffffffffffffff91821693501690506001600160a01b038781169084161461095a57808261095d565b81815b90999098509650505050505050565b60008084116109c2576040805162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e5400000000000000604482015290519081900360640190fd5b6000831180156109d25750600082115b6109db57600080fd5b60006109e9856103e56115e9565b905060006109f782856115e9565b90506000610a1183610a0b886103e86115e9565b9061160d565b9050808281610a1c57fe5b04979650505050505050565b610a30611638565b826001600160a01b0316846001600160a01b03161115610a4e579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b031610610aa657600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b60008060008351606014610bdd57604484511015610baa5760405162461bcd60e51b81526004016106a290611aad565b60048401935083806020019051810190610bc4919061178c565b60405162461bcd60e51b81526004016106a29190611a93565b83806020019051810190610bf1919061197e565b9250925092509193909250565b60008060008060008060008060088b6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4557600080fd5b505afa158015610c59573d6000803e3d6000fd5b505050506040513d6020811015610c6f57600080fd5b5051600290810b908c900b81610c8157fe5b0560020b901d905060006101008c6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc757600080fd5b505afa158015610cdb573d6000803e3d6000fd5b505050506040513d6020811015610cf157600080fd5b5051600290810b908d900b81610d0357fe5b0560020b81610d0e57fe5b079050600060088d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d4e57600080fd5b505afa158015610d62573d6000803e3d6000fd5b505050506040513d6020811015610d7857600080fd5b5051600290810b908d900b81610d8a57fe5b0560020b901d905060006101008e6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dd057600080fd5b505afa158015610de4573d6000803e3d6000fd5b505050506040513d6020811015610dfa57600080fd5b5051600290810b908e900b81610e0c57fe5b0560020b81610e1757fe5b07905060008160ff166001901b8f6001600160a01b0316635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b158015610e6b57600080fd5b505afa158015610e7f573d6000803e3d6000fd5b505050506040513d6020811015610e9557600080fd5b505116118015610f1b57508d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ed957600080fd5b505afa158015610eed573d6000803e3d6000fd5b505050506040513d6020811015610f0357600080fd5b5051600290810b908d900b81610f1557fe5b0760020b155b8015610f2c57508b60020b8d60020b135b945060008360ff166001901b8f6001600160a01b0316635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b158015610f7f57600080fd5b505afa158015610f93573d6000803e3d6000fd5b505050506040513d6020811015610fa957600080fd5b50511611801561102f57508d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fed57600080fd5b505afa158015611001573d6000803e3d6000fd5b505050506040513d602081101561101757600080fd5b5051600290810b908e900b8161102957fe5b0760020b155b801561104057508b60020b8d60020b125b95508160010b8460010b128061106c57508160010b8460010b14801561106c57508060ff168360ff1611155b156110825783995082975081985080965061108f565b8199508097508398508296505b505060001960ff87161b9150505b8560010b8760010b1361115f578560010b8760010b14156110c45760001960ff858103161c165b6000818c6001600160a01b0316635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561110e57600080fd5b505afa158015611122573d6000803e3d6000fd5b505050506040513d602081101561113857600080fd5b50511690506111468161161d565b61ffff169890980197505060019095019460001961109d565b811561116c576001880397505b8215611179576001880397505b505050505050509392505050565b6000818260140110156111e1576040805162461bcd60e51b815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b816014018351101561123a576040805162461bcd60e51b815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b6000818260030110156112ad576040805162461bcd60e51b815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b8160030183511015611306576040805162461bcd60e51b815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015611369576040805162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b8282840110156113c0576040805162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b81830184511015611418576040805162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b6060821580156114375760405191506000825260208201604052611481565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611470578051835260209283019201611458565b5050858452601f01601f1916604052505b50949350505050565b60006114968383610a7e565b9050336001600160a01b0382161461018c57600080fd5b600080826001600160a01b0316846001600160a01b031614156114cf57600080fd5b826001600160a01b0316846001600160a01b0316106114ef5782846114f2565b83835b90925090506001600160a01b03821661150a57600080fd5b9250929050565b600080600061152085856114ad565b604080516bffffffffffffffffffffffff19606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501207fff0000000000000000000000000000000000000000000000000000000000000060688401529a90941b9093166069840152607d8301989098527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b60008215806116045750508181028183828161160157fe5b04145b61018c57600080fd5b8082018281101561018c57600080fd5b6000805b821561018c57600019830190921691600101611621565b604080516060810182526000808252602082018190529181019190915290565b600082601f830112611668578081fd5b813561167b61167682611c0b565b611be7565b81815284602083860101111561168f578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b811461082a57600080fd5b803561082a81611c5d565b805161ffff8116811461082a57600080fd5b600080604083850312156116ea578182fd5b823567ffffffffffffffff811115611700578283fd5b61170c85828601611658565b95602094909401359450505050565b6000806040838503121561172d578182fd5b505080516020909101519092909150565b600080600060608486031215611752578081fd5b8335925060208401359150604084013567ffffffffffffffff811115611776578182fd5b61178286828701611658565b9150509250925092565b60006020828403121561179d578081fd5b815167ffffffffffffffff8111156117b3578182fd5b8201601f810184136117c3578182fd5b80516117d161167682611c0b565b8181528560208385010111156117e5578384fd5b610895826020830160208601611c2d565b600060608284031215611807578081fd5b6040516060810181811067ffffffffffffffff8211171561182457fe5b604052823561183281611c5d565b8152602083013561184281611c5d565b60208201526040928301359281019290925250919050565b600060a0828403121561186b578081fd5b60405160a0810181811067ffffffffffffffff8211171561188857fe5b604052823561189681611c5d565b815260208301356118a681611c5d565b602082015260408381013590820152606083013562ffffff811681146118ca578283fd5b60608201526118db608084016116bb565b60808201529392505050565b600080600080600080600060e0888a031215611901578283fd5b875161190c81611c5d565b965061191a602089016116a9565b9550611928604089016116c6565b9450611936606089016116c6565b9350611944608089016116c6565b925060a088015160ff81168114611959578283fd5b60c0890151909250801515811461196e578182fd5b8091505092959891949750929550565b600080600060608486031215611992578081fd5b8351925060208401516119a481611c5d565b91506119b2604085016116a9565b90509250925092565b600081518084526119d3816020860160208601611c2d565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b6001600160a01b0391909116815260200190565b60006001600160a01b038088168352861515602084015285604084015280851660608401525060a06080830152611a8860a08301846119bb565b979650505050505050565b600060208252611aa660208301846119bb565b9392505050565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b6020808252818101527f4578616374206f75747075742071756f7465206e6f7420737570706f72746564604082015260600190565b90815260200190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611b6b5784516001600160a01b031683529383019391830191600101611b46565b505084810360408601528651808252908201925081870190845b81811015611ba757825163ffffffff1685529383019391830191600101611b85565b5050505060609290920192909252949350505050565b9384526001600160a01b0392909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611c0357fe5b604052919050565b600067ffffffffffffffff821115611c1f57fe5b50601f01601f191660200190565b60005b83811015611c48578181015183820152602001611c30565b83811115611c57576000848401525b50505050565b6001600160a01b0381168114611c7257600080fd5b5056fea264697066735822122053c43f0567de8dccbe67e07456f1ba6c72ccfc3e372711b5e12b0b3be47b525b64736f6c63430007060033";

type MixedRouteQuoterV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MixedRouteQuoterV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MixedRouteQuoterV1__factory extends ContractFactory {
  constructor(...args: MixedRouteQuoterV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _factoryV2: PromiseOrValue<string>,
    _WETH9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MixedRouteQuoterV1> {
    return super.deploy(
      _factory,
      _factoryV2,
      _WETH9,
      overrides || {}
    ) as Promise<MixedRouteQuoterV1>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _factoryV2: PromiseOrValue<string>,
    _WETH9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _factoryV2,
      _WETH9,
      overrides || {}
    );
  }
  override attach(address: string): MixedRouteQuoterV1 {
    return super.attach(address) as MixedRouteQuoterV1;
  }
  override connect(signer: Signer): MixedRouteQuoterV1__factory {
    return super.connect(signer) as MixedRouteQuoterV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MixedRouteQuoterV1Interface {
    return new utils.Interface(_abi) as MixedRouteQuoterV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MixedRouteQuoterV1 {
    return new Contract(address, _abi, signerOrProvider) as MixedRouteQuoterV1;
  }
}
