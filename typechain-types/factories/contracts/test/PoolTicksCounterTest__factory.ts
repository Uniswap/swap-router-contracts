/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PoolTicksCounterTest,
  PoolTicksCounterTestInterface,
} from "../../../contracts/test/PoolTicksCounterTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickBefore",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickAfter",
        type: "int24",
      },
    ],
    name: "countInitializedTicksCrossed",
    outputs: [
      {
        internalType: "uint32",
        name: "initializedTicksCrossed",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610680806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634c5b941c14610030575b600080fd5b6100696004803603606081101561004657600080fd5b506001600160a01b03813516906020810135600290810b9160400135900b610082565b6040805163ffffffff9092168252519081900360200190f35b60006100986001600160a01b03851684846100a0565b949350505050565b60008060008060008060008060088b6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100e757600080fd5b505afa1580156100fb573d6000803e3d6000fd5b505050506040513d602081101561011157600080fd5b5051600290810b908c900b8161012357fe5b0560020b901d905060006101008c6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561016957600080fd5b505afa15801561017d573d6000803e3d6000fd5b505050506040513d602081101561019357600080fd5b5051600290810b908d900b816101a557fe5b0560020b816101b057fe5b079050600060088d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101f057600080fd5b505afa158015610204573d6000803e3d6000fd5b505050506040513d602081101561021a57600080fd5b5051600290810b908d900b8161022c57fe5b0560020b901d905060006101008e6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027257600080fd5b505afa158015610286573d6000803e3d6000fd5b505050506040513d602081101561029c57600080fd5b5051600290810b908e900b816102ae57fe5b0560020b816102b957fe5b07905060008160ff166001901b8f6001600160a01b0316635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561030d57600080fd5b505afa158015610321573d6000803e3d6000fd5b505050506040513d602081101561033757600080fd5b5051161180156103bd57508d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561037b57600080fd5b505afa15801561038f573d6000803e3d6000fd5b505050506040513d60208110156103a557600080fd5b5051600290810b908d900b816103b757fe5b0760020b155b80156103ce57508b60020b8d60020b135b945060008360ff166001901b8f6001600160a01b0316635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561042157600080fd5b505afa158015610435573d6000803e3d6000fd5b505050506040513d602081101561044b57600080fd5b5051161180156104d157508d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048f57600080fd5b505afa1580156104a3573d6000803e3d6000fd5b505050506040513d60208110156104b957600080fd5b5051600290810b908e900b816104cb57fe5b0760020b155b80156104e257508b60020b8d60020b125b95508160010b8460010b128061050e57508160010b8460010b14801561050e57508060ff168360ff1611155b1561052457839950829750819850809650610531565b8199508097508398508296505b505060001960ff87161b9150505b8560010b8760010b13610601578560010b8760010b14156105665760001960ff858103161c165b6000818c6001600160a01b0316635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156105b057600080fd5b505afa1580156105c4573d6000803e3d6000fd5b505050506040513d60208110156105da57600080fd5b50511690506105e881610629565b61ffff169890980197505060019095019460001961053f565b811561060e576001880397505b821561061b576001880397505b505050505050509392505050565b6000805b82156106445760001983019092169160010161062d565b9291505056fea2646970667358221220a14450e0c68aff4c6370234a831a3cd58873126586a545a3c007a90dd4041dd164736f6c63430007060033";

type PoolTicksCounterTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolTicksCounterTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolTicksCounterTest__factory extends ContractFactory {
  constructor(...args: PoolTicksCounterTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolTicksCounterTest> {
    return super.deploy(overrides || {}) as Promise<PoolTicksCounterTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolTicksCounterTest {
    return super.attach(address) as PoolTicksCounterTest;
  }
  override connect(signer: Signer): PoolTicksCounterTest__factory {
    return super.connect(signer) as PoolTicksCounterTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolTicksCounterTestInterface {
    return new utils.Interface(_abi) as PoolTicksCounterTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolTicksCounterTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PoolTicksCounterTest;
  }
}
